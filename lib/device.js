// Generated by CoffeeScript 1.6.1
(function() {
  var _addClass, _doc_element, _handleOrientation, _hasClass, _orientation_event, _removeClass, _supports_orientation, _user_agent,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  window.device = {};

  _doc_element = window.document.documentElement;

  _user_agent = window.navigator.userAgent.toLowerCase();

  device.ios = function() {
    return device.iphone() || device.ipod() || device.ipad();
  };

  device.iphone = function() {
    if (_user_agent.match(/iphone/i)) {
      return true;
    } else {
      return false;
    }
  };

  device.ipod = function() {
    if (_user_agent.match(/ipod/i)) {
      return true;
    } else {
      return false;
    }
  };

  device.ipad = function() {
    if (_user_agent.match(/ipad/i)) {
      return true;
    } else {
      return false;
    }
  };

  device.android = function() {
    if (_user_agent.match(/android/i)) {
      return true;
    } else {
      return false;
    }
  };

  device.androidPhone = function() {
    if (device.android() && _user_agent.match(/mobile/i)) {
      return true;
    } else {
      return false;
    }
  };

  device.androidTablet = function() {
    if (device.android() && !_user_agent.match(/mobile/i)) {
      return true;
    } else {
      return false;
    }
  };

  device.blackberry = function() {
    if (_user_agent.match(/blackberry/i)) {
      return true;
    } else {
      return false;
    }
  };

  device.blackberryPhone = function() {
    if (device.blackberry() && !_user_agent.match(/tablet/i)) {
      return true;
    } else {
      return false;
    }
  };

  device.blackberryTablet = function() {
    if (_user_agent.match(/rim tablet/i)) {
      return true;
    } else {
      return false;
    }
  };

  device.windowsPhone = function() {
    if (_user_agent.match(/windows phone/i)) {
      return true;
    } else {
      return false;
    }
  };

  device.mobile = function() {
    return device.androidPhone() || device.iphone() || device.ipod() || device.windowsPhone() || device.blackberryPhone();
  };

  device.tablet = function() {
    return device.ipad() || device.androidTablet() || device.blackberryTablet();
  };

  device.portrait = function() {
    if (Math.abs(window.orientation === 90)) {
      return false;
    } else {
      return true;
    }
  };

  device.landscape = function() {
    if (Math.abs(window.orientation === 90)) {
      return true;
    } else {
      return false;
    }
  };

  _hasClass = function(class_name) {
    var regex;
    regex = new RegExp(class_name, 'i');
    return _doc_element.className.match(regex);
  };

  _addClass = function(class_name) {
    if (!_hasClass(class_name)) {
      return _doc_element.className += " " + class_name;
    }
  };

  _removeClass = function(class_name) {
    if (_hasClass(class_name)) {
      return _doc_element.className = _doc_element.className.replace(class_name, "");
    }
  };

  if (device.ios()) {
    if (device.ipad()) {
      _addClass("ios ipad tablet");
    } else if (device.iphone()) {
      _addClass("ios iphone mobile");
    } else if (device.ipod()) {
      _addClass("ios ipod mobile");
    }
  } else if (device.android()) {
    if (device.androidTablet()) {
      _addClass("android tablet");
    } else {
      _addClass("android mobile");
    }
  } else if (device.blackberry()) {
    if (device.blackberryTablet()) {
      _addClass("blackberry tablet");
    } else {
      _addClass("blackberry mobile");
    }
  } else if (device.windowsPhone()) {
    _addClass("windows mobile");
  } else {
    _addClass("desktop");
  }

  _handleOrientation = function() {
    if (device.landscape()) {
      _removeClass("portrait");
      return _addClass("landscape");
    } else {
      _removeClass("landscape");
      return _addClass("portrait");
    }
  };

  _supports_orientation = __indexOf.call(window, "onorientationchange") >= 0;

  _orientation_event = _supports_orientation ? "orientationchange" : "resize";

  if (window.addEventListener) {
    window.addEventListener(_orientation_event, _handleOrientation, false);
  } else if (window.attachEvent) {
    window.attachEvent(_orientation_event, _handleOrientation);
  } else {
    window[_orientation_event] = _handleOrientation;
  }

  _handleOrientation();

}).call(this);
